services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
      - "${KAFKA_CTRL_PORT}:${KAFKA_CTRL_PORT}"
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:${KAFKA_PORT},CONTROLLER://0.0.0.0:${KAFKA_CTRL_PORT}
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:${KAFKA_PORT}
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:${KAFKA_CTRL_PORT}
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_NODE_ID: 1
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    healthcheck:
      test: [ "CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy

  order_service:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      KAFKA_BROKERS: ${KAFKA_BROKERS}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      KAFKA_GROUP_ID: ${KAFKA_GROUP_ID}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8081/health || exit 1" ]
      interval: 45s
      timeout: 5s
      retries: 5

  order_generator:
    build:
      context: .
      dockerfile: Dockerfile.generator
    depends_on:
      order_service:
        condition: service_healthy
    environment:
      KAFKA_BROKERS: ${KAFKA_BROKERS}
      KAFKA_TOPIC: ${KAFKA_TOPIC}

volumes:
  postgres_data:
